{
	"info": {
	  "_postman_id": "f4491ef4-516b-4226-8d89-b1d065cecb05",
	  "name": "homework",
	  "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
	  "_exporter_id": "34520114"
	},
	"name": "Postman test with Chai",
	"item": [
	  {
		"name": "test",
		"event": [
		  {
			"listen": "test",
			"script": {
			  "exec": [
				"pm.test(\"GET request returns 200 status code\", () => {\n",
				"  pm.expect(pm.response.code).to.equal(200);\n",
				"});\n",
				"\n",
				"pm.test(\"GET request returns non-empty response body\", () => {\n",
				"  pm.expect(pm.response.json()).to.not.be.empty;\n",
				"});"
			  ],
			  "type": "text/javascript",
			  "packages": {}
			}
		  }
		],
		"request": {
		  "method": "GET",
		  "header": [],
		  "url": {
			"raw": "https://jsonplaceholder.typicode.com/posts",
			"protocol": "https",
			"host": [
			  "jsonplaceholder",
			  "typicode",
			  "com"
			],
			"path": [
			  "posts"
			]
		  }
		},
		"response": []
	  },
	  {
		"name": "test 201",
		"event": [
		  {
			"listen": "test",
			"script": {
			  "exec": [
				"pm.test(\"POST request returns code 201 CREATED\", () => {\n",
				"  pm.expect(pm.response.code).to.equal(201);\n",
				"});"
			  ],
			  "type": "text/javascript",
			  "packages": {}
			}
		  }
		],
		"request": {
		  "method": "POST",
		  "header": [],
		  "body": {
			"mode": "raw",
			"raw": "{\n  \"userId\": \"001\",\n  \"id\": \"100\",\n  \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n  \"body\": \"dont empty\"\n}",
			"options": {
			  "raw": {
				"language": "json"
			  }
			}
		  },
		  "url": {
			"raw": "https://jsonplaceholder.typicode.com/posts",
			"protocol": "https",
			"host": [
			  "jsonplaceholder",
			  "typicode",
			  "com"
			],
			"path": [
			  "posts"
			]
		  }
		},
		"response": []
	  },
	  {
		"name": "test 204",
		"event": [
		  {
			"listen": "test",
			"script": {
			  "exec": [
				"pm.test(\"DELETE request returns code 200 \", () => {\n",
				"    pm.expect(pm.response.code).to.equal(200);\n",
				"});\n",
				"pm.test(\"DELETE request returns empty JSON response\", () => {\n",
				"    pm.expect(pm.response.json()).to.be.empty;\n",
				"});"
			  ],
			  "type": "text/javascript",
			  "packages": {}
			}
		  }
		],
		"request": {
		  "method": "DELETE",
		  "header": [],
		  "url": {
			"raw": "https://jsonplaceholder.typicode.com/posts/1",
			"protocol": "https",
			"host": [
			  "jsonplaceholder",
			  "typicode",
			  "com"
			],
			"path": [
			  "posts",
			  "1"
			]
		  }
		},
		"response": []
	  },
	  {
		"name": "test",
		"event": [
		  {
			"listen": "test",
			"script": {
			  "exec": [
				"pm.test(\"PUT request returns object with at least 3 properties\", () => {\n",
				"\n",
				"  pm.expect(Object.keys(pm.response.json()).length).to.be.at.least(3);\n",
				"});\n",
				"\n",
				"pm.test(\"PUT request returns object with non-empty Id property\", () => {\n",
				"  pm.expect(pm.response.json().id).to.not.be.empty;\n",
				"});"
			  ],
			  "type": "text/javascript",
			  "packages": {}
			}
		  }
		],
		"request": {
		  "method": "PUT",
		  "header": [],
		  "url": {
			"raw": "http://localhost:4850/api/shops/TZ001",
			"protocol": "http",
			"host": [
			  "localhost"
			],
			"port": "4850",
			"path": [
			  "api",
			  "shops",
			  "TZ001"
			]
		  }
		},
		"response": []
	  },
	  {
		"name": "New Request",
		"request": {
		  "method": "GET",
		  "header": []
		},
		"response": []
	  }
	],
	"event": [
	  {
		"listen": "prerequest",
		"script": {
		  "type": "text/javascript",
		  "packages": {},
		  "exec": []
		}
	  },
	  {
		"listen": "test",
		"script": {
		  "type": "text/javascript",
		  "packages": {},
		  "exec": []
		}
	  }
	],
	"variable": [
	  {
		"key": "base_url",
		"value": "http://localhost:4850/api/",
		"type": "string"
	  }
	]
  }